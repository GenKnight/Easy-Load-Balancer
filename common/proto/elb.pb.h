// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: elb.proto

#ifndef PROTOBUF_elb_2eproto__INCLUDED
#define PROTOBUF_elb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace elb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_elb_2eproto();
void protobuf_AssignDesc_elb_2eproto();
void protobuf_ShutdownFile_elb_2eproto();

class HostAddr;
class GetRouteByAgentReq;
class GetRouteByAgentRsp;

enum MsgTypeId {
  GetHostReqId = 1,
  GetHostRspId = 2,
  ReportReqId = 3,
  GetRouteByToolReqId = 4,
  GetRouteByToolRspId = 5,
  RecordLbReqId = 6,
  GetRouteByAgentReqId = 7,
  GetRouteByAgentRspId = 8,
  ReportStatusReqId = 9
};
bool MsgTypeId_IsValid(int value);
const MsgTypeId MsgTypeId_MIN = GetHostReqId;
const MsgTypeId MsgTypeId_MAX = ReportStatusReqId;
const int MsgTypeId_ARRAYSIZE = MsgTypeId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgTypeId_descriptor();
inline const ::std::string& MsgTypeId_Name(MsgTypeId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgTypeId_descriptor(), value);
}
inline bool MsgTypeId_Parse(
    const ::std::string& name, MsgTypeId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgTypeId>(
    MsgTypeId_descriptor(), name, value);
}
// ===================================================================

class HostAddr : public ::google::protobuf::Message {
 public:
  HostAddr();
  virtual ~HostAddr();

  HostAddr(const HostAddr& from);

  inline HostAddr& operator=(const HostAddr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HostAddr& default_instance();

  void Swap(HostAddr* other);

  // implements Message ----------------------------------------------

  HostAddr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HostAddr& from);
  void MergeFrom(const HostAddr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google::protobuf::int32 ip() const;
  inline void set_ip(::google::protobuf::int32 value);

  // required int32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:elb.HostAddr)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ip_;
  ::google::protobuf::int32 port_;
  friend void  protobuf_AddDesc_elb_2eproto();
  friend void protobuf_AssignDesc_elb_2eproto();
  friend void protobuf_ShutdownFile_elb_2eproto();

  void InitAsDefaultInstance();
  static HostAddr* default_instance_;
};
// -------------------------------------------------------------------

class GetRouteByAgentReq : public ::google::protobuf::Message {
 public:
  GetRouteByAgentReq();
  virtual ~GetRouteByAgentReq();

  GetRouteByAgentReq(const GetRouteByAgentReq& from);

  inline GetRouteByAgentReq& operator=(const GetRouteByAgentReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRouteByAgentReq& default_instance();

  void Swap(GetRouteByAgentReq* other);

  // implements Message ----------------------------------------------

  GetRouteByAgentReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRouteByAgentReq& from);
  void MergeFrom(const GetRouteByAgentReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 modid = 1;
  inline bool has_modid() const;
  inline void clear_modid();
  static const int kModidFieldNumber = 1;
  inline ::google::protobuf::int32 modid() const;
  inline void set_modid(::google::protobuf::int32 value);

  // required int32 cmdid = 2;
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdidFieldNumber = 2;
  inline ::google::protobuf::int32 cmdid() const;
  inline void set_cmdid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:elb.GetRouteByAgentReq)
 private:
  inline void set_has_modid();
  inline void clear_has_modid();
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 modid_;
  ::google::protobuf::int32 cmdid_;
  friend void  protobuf_AddDesc_elb_2eproto();
  friend void protobuf_AssignDesc_elb_2eproto();
  friend void protobuf_ShutdownFile_elb_2eproto();

  void InitAsDefaultInstance();
  static GetRouteByAgentReq* default_instance_;
};
// -------------------------------------------------------------------

class GetRouteByAgentRsp : public ::google::protobuf::Message {
 public:
  GetRouteByAgentRsp();
  virtual ~GetRouteByAgentRsp();

  GetRouteByAgentRsp(const GetRouteByAgentRsp& from);

  inline GetRouteByAgentRsp& operator=(const GetRouteByAgentRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRouteByAgentRsp& default_instance();

  void Swap(GetRouteByAgentRsp* other);

  // implements Message ----------------------------------------------

  GetRouteByAgentRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRouteByAgentRsp& from);
  void MergeFrom(const GetRouteByAgentRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 modid = 1;
  inline bool has_modid() const;
  inline void clear_modid();
  static const int kModidFieldNumber = 1;
  inline ::google::protobuf::int32 modid() const;
  inline void set_modid(::google::protobuf::int32 value);

  // required int32 cmdid = 2;
  inline bool has_cmdid() const;
  inline void clear_cmdid();
  static const int kCmdidFieldNumber = 2;
  inline ::google::protobuf::int32 cmdid() const;
  inline void set_cmdid(::google::protobuf::int32 value);

  // repeated .elb.HostAddr hosts = 3;
  inline int hosts_size() const;
  inline void clear_hosts();
  static const int kHostsFieldNumber = 3;
  inline const ::elb::HostAddr& hosts(int index) const;
  inline ::elb::HostAddr* mutable_hosts(int index);
  inline ::elb::HostAddr* add_hosts();
  inline const ::google::protobuf::RepeatedPtrField< ::elb::HostAddr >&
      hosts() const;
  inline ::google::protobuf::RepeatedPtrField< ::elb::HostAddr >*
      mutable_hosts();

  // @@protoc_insertion_point(class_scope:elb.GetRouteByAgentRsp)
 private:
  inline void set_has_modid();
  inline void clear_has_modid();
  inline void set_has_cmdid();
  inline void clear_has_cmdid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 modid_;
  ::google::protobuf::int32 cmdid_;
  ::google::protobuf::RepeatedPtrField< ::elb::HostAddr > hosts_;
  friend void  protobuf_AddDesc_elb_2eproto();
  friend void protobuf_AssignDesc_elb_2eproto();
  friend void protobuf_ShutdownFile_elb_2eproto();

  void InitAsDefaultInstance();
  static GetRouteByAgentRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// HostAddr

// required int32 ip = 1;
inline bool HostAddr::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HostAddr::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HostAddr::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HostAddr::clear_ip() {
  ip_ = 0;
  clear_has_ip();
}
inline ::google::protobuf::int32 HostAddr::ip() const {
  // @@protoc_insertion_point(field_get:elb.HostAddr.ip)
  return ip_;
}
inline void HostAddr::set_ip(::google::protobuf::int32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:elb.HostAddr.ip)
}

// required int32 port = 2;
inline bool HostAddr::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HostAddr::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HostAddr::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HostAddr::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 HostAddr::port() const {
  // @@protoc_insertion_point(field_get:elb.HostAddr.port)
  return port_;
}
inline void HostAddr::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:elb.HostAddr.port)
}

// -------------------------------------------------------------------

// GetRouteByAgentReq

// required int32 modid = 1;
inline bool GetRouteByAgentReq::has_modid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRouteByAgentReq::set_has_modid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRouteByAgentReq::clear_has_modid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRouteByAgentReq::clear_modid() {
  modid_ = 0;
  clear_has_modid();
}
inline ::google::protobuf::int32 GetRouteByAgentReq::modid() const {
  // @@protoc_insertion_point(field_get:elb.GetRouteByAgentReq.modid)
  return modid_;
}
inline void GetRouteByAgentReq::set_modid(::google::protobuf::int32 value) {
  set_has_modid();
  modid_ = value;
  // @@protoc_insertion_point(field_set:elb.GetRouteByAgentReq.modid)
}

// required int32 cmdid = 2;
inline bool GetRouteByAgentReq::has_cmdid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRouteByAgentReq::set_has_cmdid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRouteByAgentReq::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRouteByAgentReq::clear_cmdid() {
  cmdid_ = 0;
  clear_has_cmdid();
}
inline ::google::protobuf::int32 GetRouteByAgentReq::cmdid() const {
  // @@protoc_insertion_point(field_get:elb.GetRouteByAgentReq.cmdid)
  return cmdid_;
}
inline void GetRouteByAgentReq::set_cmdid(::google::protobuf::int32 value) {
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:elb.GetRouteByAgentReq.cmdid)
}

// -------------------------------------------------------------------

// GetRouteByAgentRsp

// required int32 modid = 1;
inline bool GetRouteByAgentRsp::has_modid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRouteByAgentRsp::set_has_modid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRouteByAgentRsp::clear_has_modid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRouteByAgentRsp::clear_modid() {
  modid_ = 0;
  clear_has_modid();
}
inline ::google::protobuf::int32 GetRouteByAgentRsp::modid() const {
  // @@protoc_insertion_point(field_get:elb.GetRouteByAgentRsp.modid)
  return modid_;
}
inline void GetRouteByAgentRsp::set_modid(::google::protobuf::int32 value) {
  set_has_modid();
  modid_ = value;
  // @@protoc_insertion_point(field_set:elb.GetRouteByAgentRsp.modid)
}

// required int32 cmdid = 2;
inline bool GetRouteByAgentRsp::has_cmdid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRouteByAgentRsp::set_has_cmdid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRouteByAgentRsp::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRouteByAgentRsp::clear_cmdid() {
  cmdid_ = 0;
  clear_has_cmdid();
}
inline ::google::protobuf::int32 GetRouteByAgentRsp::cmdid() const {
  // @@protoc_insertion_point(field_get:elb.GetRouteByAgentRsp.cmdid)
  return cmdid_;
}
inline void GetRouteByAgentRsp::set_cmdid(::google::protobuf::int32 value) {
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:elb.GetRouteByAgentRsp.cmdid)
}

// repeated .elb.HostAddr hosts = 3;
inline int GetRouteByAgentRsp::hosts_size() const {
  return hosts_.size();
}
inline void GetRouteByAgentRsp::clear_hosts() {
  hosts_.Clear();
}
inline const ::elb::HostAddr& GetRouteByAgentRsp::hosts(int index) const {
  // @@protoc_insertion_point(field_get:elb.GetRouteByAgentRsp.hosts)
  return hosts_.Get(index);
}
inline ::elb::HostAddr* GetRouteByAgentRsp::mutable_hosts(int index) {
  // @@protoc_insertion_point(field_mutable:elb.GetRouteByAgentRsp.hosts)
  return hosts_.Mutable(index);
}
inline ::elb::HostAddr* GetRouteByAgentRsp::add_hosts() {
  // @@protoc_insertion_point(field_add:elb.GetRouteByAgentRsp.hosts)
  return hosts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::elb::HostAddr >&
GetRouteByAgentRsp::hosts() const {
  // @@protoc_insertion_point(field_list:elb.GetRouteByAgentRsp.hosts)
  return hosts_;
}
inline ::google::protobuf::RepeatedPtrField< ::elb::HostAddr >*
GetRouteByAgentRsp::mutable_hosts() {
  // @@protoc_insertion_point(field_mutable_list:elb.GetRouteByAgentRsp.hosts)
  return &hosts_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace elb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::elb::MsgTypeId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::elb::MsgTypeId>() {
  return ::elb::MsgTypeId_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_elb_2eproto__INCLUDED
